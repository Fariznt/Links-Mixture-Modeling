% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_glm.R
\name{fit_glm}
\alias{fit_glm}
\title{Fits a Bayesian mixture model using Stan with various distribution families.}
\usage{
fit_glm(
  formulas,
  p_family,
  data,
  components,
  priors = NULL,
  iterations = 10000,
  warmup_iterations = 1000,
  chains = 2,
  seed = 123
)
}
\arguments{
\item{p_family}{Distribution family ("linear", "logistic", "poisson", "gamma")}

\item{data}{Input data frame or "random" for synthetic data}

\item{components}{Vector specifying mixture components (e.g., c("linear", "linear"))}

\item{priors}{Named list (or NULL) of strings defining priors and optionally
hyperparameter definitions used in the prior definition. NULL priors or missing
list elements defining needed priors triggers weakly-informative defaults.}

\item{iterations}{Total number of MCMC iterations, default is}

\item{chains}{Number of MCMC chains}

\item{seed}{Random seed (integer or "random")}

\item{formula}{Model formula (e.g., y ~ x1 + x2)}

\item{result_type}{0 for matrix output, 1 for posterior samples,}

\item{burning_iterations}{Number of burn-in iterations}
}
\value{
Results depending on result_type
}
\description{
Fits a Bayesian mixture model using Stan with various distribution families.
}
\examples{
\dontrun{
# Linear mixture example, assuming cov_matrix is a defined R matrix
lin_fit <- LinksMixtureModeling::fit_glm(
 formula             = y ~ X1 + X2,        # y, X1, X2 auto-generated
 p_family            = "linear",
 data                = "random",           # triggers built-in generator
 components          = c("linear", "linear"),
 priors              = list(beta1_sigma = cov_matrix, 
                            beta1_loc = c(7,8), 
                            beta1 = "multi_normal(beta1_loc, beta1_sigma)",
                            mu1 = "normal(0,4)",
                            mu2_loc = 0,
                            mu2_scale = 6,
                            mu2 = "normal(mu2_loc, mu2_scale)"),
 result_type         = 1,                  # post-processed summary
 iterations          = 2000,               # 1000 warm-up + 1000 sampling
 burning_iterations  = 1000,
 chains              = 2,
 seed                = 123
)
}
}
